@{
    ViewBag.Title = "Posts Listing";
        
 }
@using PagedList.Mvc;
@using PagedList;

<!-- import the included stylesheet for some (very basic) default styling -->
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />

<!-- loop through each of your products and display it however you want. we're just printing the name here -->
<h2>List of Posts</h2>
<p>
    @if (User.IsInRole("Writer")){
    @Html.ActionLink("Create New", "Create")
    }
</p>

<p>
    @using (Html.BeginForm("Index","Home",FormMethod.Get))
    {    
        <p>
        Tag Filter: @Html.DropDownList("PostTag", "All")
        <input type="submit" value="Filter" />
        </p> 
    }
</p>

<table>
    @foreach(var post in ViewBag.Page)
    {
        <tr>
            <td>@post.Title</td>
        </tr>
        <tr>
            <td >El autor es: @post.Author.UserName</td>
        </tr>
        <tr>
            <td>@post.Message</td>
        </tr>
        <tr>
            <td>Tags: <br />
                @foreach (var tag in post.Tags)
                {
                    @tag.Description
                }
            </td>
        </tr>
        <tr>
            <td>Respuestas: <br />
                @foreach (var reply in post.Replies)
                { 
                    @reply.Message<br />
                }
            </td>
        </tr>
        <tr>
            <td>
                @if (WebSecurity.CurrentUserId != -1)
                {
                    @Html.ActionLink("Post a reply", "Reply", new { id = post.Id })
                }
                @if (User.IsInRole("Admin"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id=post.Id }) 
                    @Html.ActionLink("Details", "Details", new { id=post.Id }) 
                    @Html.ActionLink("Delete", "Delete", new { id=post.Id })
                }
            </td>
        </tr>
    }
</table>

<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
@Html.PagedListPager( (IPagedList)ViewBag.Page, page => Url.Action("Index", new { page }) )